---
title: "802 Project Summary"
authors: 
  Maksuda Aktar Toma,
  Jo Charbonneau,
  Ryan Lalicker
date: today
date-format: long
execute: 
  echo: false
  warning: false
format:
  pdf: 
    fig-align: center
    fig-width: 6
    fig-height: 4
bibliography: references.bib
editor: 
  markdown: 
    wrap: sentence
---

```{r,  fig.pos="H"}
#| label: data-setup
#| echo: false
#| eval: true

library(knitr)
library(dplyr)
library(ggplot2)
library(naniar)
library(reshape2)
library(GGally)
library(janitor)
library(emmeans)
library(MASS)
library(multcomp)
library(lme4)
library(nnet)
library(kableExtra)

data <- read.csv("rptm_simulation.csv")


```

```{r,  fig.pos="H"}
#| label: Scratch-work-1
#| echo: false
#| eval: false

```

# Introduction

This paper summarizes the consulting that was done for our assigned STAT 802 group.
For more information on the experiment, the data, or any other files used in this paper see our [Github page](https://github.com/maksudatoma/Stat-802-Project) which can be found at \<https://github.com/maksudatoma/Stat-802-Project\>.
The coding languages used in the paper are R and SAS.
The corresponding code can be found in *Appendix A - R Code* and *Appendix B - SAS Code* respectively.

# Initial Meetings

The first meeting with our clients was on September 13th.
We discussed their project and what kind of data they were going to be looking at.
They detailed to us their project, which is looking at the levels of Salmonella in beef jerky at different inoculations and thicknesses.
Prior to the meeting they sent us what their variables would be, which gave us a good idea of what might be the best experimental design.
The group informed us they were avoiding a completely randomized design (CRD) at the request of their professor.
With that in mind, we suggested other possible models.

Later, after receiving feedback from Dr. Howard and several PhD students within the statistics department, we suggested adding a time component to the experiment as well as creating multiple batches to replicate each treatment combination.
This lead to us suggested a mixed model for the analysis approach.

In both the initial meeting and the follow-up session the clients were more than happy to implement our suggestions.
In the end the experiment involved two thickness levels (one-fourth and one-eighth of an inch), two inoculation methods (dry and wet), and five evenly spaced time points were measurements were taken (weeks 1-5) creating twenty entries per batch.
The exact number of batches would not be known until after the power analysis, found in the *Power Analysis* section.
We provided the client an example dataset we created to give them a better idea of what the end product may look like.
This dataset had five batches.

# Study Objectives and Proposed Model

The clients were most interested in the effect of the thickness levels, the inoculation method, and their interaction had on the Salmonella levels.
In the final model we included the week effect and subsequent interactions as well.
These variables are the fixed effects in the proposed mixed model.

The other variable included in the experiment is the batch number.
This is therefore treated as a random variable.
As mentioned above, the exact number of batches needed was unknown prior to the power analysis, but five was used as a starting value.

Overall the study employs a 2Ã—2 factorial design with two main factors: Inoculation Method (Dry, Wet) and Thickness (1/4-inch, 1/8-inch).
Repeated measurements are taken over five equally spaced time points (Weeks 1 to 5), allowing the analysis of both main effects, their interaction, and changes over time.

The model can be written in the form

$$
Y_{ijkl} = \mu + \alpha_i + \beta_j + \tau_k + (\alpha \beta)_{ij}+(\alpha \tau)_{ik}+(\beta \tau)_{jk}+(\alpha \beta \tau)_{ijk} + u_l + e_{ijkl}
$$

Here, $Y_{ijkl}$ is the Salmonella level and $\mu$ is the overall mean.
The fixed effects are represented by $\alpha_i$ for the effect of the $i$th inoculation method, $\beta_j$ for the effect of the $j$th thickness level, and $\tau_k$ for the effect of the $k$th week.
The interaction effect of the $i$th inoculation method and the $j$th thickness level is represented by $(\alpha \beta)_{ij}$, with the other two-way interactions following this form.
The three-way interaction between all fixed effects is represented as $(\alpha \beta \tau)_{ijk}$.
The random effect for batches is represented by $u_l$, which we assume are distributed as $u_l$\~$N(0,\sigma_u^2)$.
Lastly, the residuals are represented by $e_{ijkl}$, which we assume can be distributed as $e_{ijkl}$\~$N(0,\sigma^2)$.

# Power Analysis

Before power analysis, We reached out to the client later on in the process to determine what contrasts they were most interested in testing.
They expressed they wanted to see the difference between the two levels of the inoculation method, the two levels of the thickness, and the orthogonal contrasts these variable.
This resulted in six contrasts being tested.

To determine the necessary number of batches needed to increase the likelihood of detecting a true treatment effect, we performed a power analysis.
To do this, probable treatment mean estimates across all five weeks and variance estimates were needed.
The clients provided these metrics from @trtmeans.
We then used these metrics to create a dataset with five batches where the response variable was identical across the batches.
This dataset was then evaluated to determine the power.
The results of the power analysis are shown below.

![Results of power analysis.](Power%20Output.png)

The first six rows of the table correspond to the contrasts the clients were interested in testing, while the bottom seven rows are measuring the fixed effects of the model.
Many of the terms have more than 80% power.
Specifically the fixed effects were all high enough for both the clients and ourselves to feel comfortable using five batches.
Two of the orthogonal contrasts, *Dry vs Wet at 1/4 Inches* and *1/4 vs 1/8 inches for Wet inoculation* did have lower power scores, but after talking with both the clients and Dr. Howard about them, we felt comfortable to proceed.

# Simulating Data

After finding the necessary number of batches, which was five, we proceeded with simulating the data.
The estimated treatment means and variances provided by the client were used in the simulation as well.
We then reviews the simulated dataset for major issues, such as negative response values, and reran the power analysis on the new data set to ensure everything was working properly.
After finding no problems with the dataset, we sent it to your clients.
The data set has been added to the appendix.

# Data Analysis

## Summary Statistics

As part of the project, we analyzed the simulated dataset.
Before fitting out model to the dataset, we first wanted to explore some of the variables.
@fig-sum-stats shows the mean values and standard deviations for each treatment combination.
We can see the changes in mean values are small, so further exploration and analysis are needed.

```{r,,fig.pos="H"}
#| label: fig-sum-stats
#| echo: false
#| eval: true
#| fig-cap: ""

# Summary of response variable across factors and weeks
response_summary <- data %>%
  group_by(Inoculation_Method, Thickness, Week) %>%
  summarise(
    Mean_Response = mean(Response, na.rm = TRUE),
    SD_Response = sd(Response, na.rm = TRUE),
    Count = n()
  )

# Create a summary table using kable
knitr::kable(
  response_summary,
  caption = "Summary of response rariable across factors and weeks",
  digits = 3, # Round numbers to 3 decimal places
  col.names = c("Inoculation Method", "Thickness", "Week", "Mean Response", "SD Response", "Count"),
  format = "markdown"
)


```

## Distribution of response variable

Before continuing our investigation into the relationships among the treatment variables, we want to look into the response variable (Salmonella levels).
Specifically, we want to see how it is distributed.
@fig-hist shows a histogram and Q-Q plot of the response variable in the left and right plots respectively.
While the histogram shows a slight potential skew, this is not enough for us say the distribution is non-normal.
Furthermore, the Q-Q plot indicates the response variable follows a relatively normal distribution.

```{r,,fig.pos="H"}
#| label: fig-hist
#| echo: false
#| eval: true
#| fig-cap: "Plots to see the distribution of the response variable."
#| layout-ncol: 2
#| fig-subcap: 
#|  - "Histogram"
#|  - "Q-Q plot"
#| fig-width: 6
#| fig-height: 4


# Basic histogram
ggplot(data, aes(x = Response)) +
  geom_histogram(binwidth = 0.1, color = "black", fill = "skyblue") +
  labs(
    x = "Response",
    y = "Frequency"
  ) +
  theme_minimal() +
  theme(text = element_text(size = 14))

ggplot(data, aes(sample = Response)) +
  stat_qq(color = "black") +
  stat_qq_line(color = "red", linetype = "dashed") +
  labs(
    x = "Theoretical Quantiles",
    y = "Sample Quantiles"
  ) +
  theme_minimal() +
  theme(text = element_text(size = 14))

```

## Exploring the Data

Now we will graphically look at how the different variables of the model impact the response variable.
@fig-explore-1 shows how the mean response variables we saw in @fig-sum-stats change over time, while also controlling for thickness and inoculation method.
Note the y-axis of plot does not start at the origin.
We can see the mean values of samples that used a wet inoculation method (blue lines) tended decrease over time, while samples with the dry inoculation method (red lines) were more of a mixed bag but saw sharp increases between weeks four and five.
The samples cut to 1/8 inches thick (dashed lines) were very similar for most weeks, but diverged near the end of the experiment, while samples cut to 1/4 inches thick (solid lines) did not seem as similar.

```{r,  fig.pos="H"}
#| label: fig-explore-1
#| echo: false
#| eval: true
#| fig-cap: "Line plot of response variable over time, controlling for thickness and inoculation method."
#| fig-width: 6
#| fig-height: 4

ggplot(response_summary, aes(x = Week, y = Mean_Response, color = Inoculation_Method, group = interaction(Inoculation_Method, Thickness))) +
  geom_line(aes(linetype = Thickness), size = 1) +
  geom_point(size = 2) +
  labs(
    x = "Week",
    y = "Mean Response",
    color = "Inoculation Method",
    linetype = "Thickness"
  ) +
  theme_minimal() +
  theme(
    text = element_text(size = 14),
    legend.position = "bottom"
  )

```

**PROBLEM - ONLY 5 SAMPLES IN EACH BOX** Since @fig-explore-1 only considers the mean values of the response variables for each treatment combination, there is potential variability we have not shown.
@fig-boxplot shows two boxplots to show how all observations differ over time.
The left plot contains all samples cut to 1/4 inches thick, while the right plot contains the 1/8 inch thick samples.
From the different sizes of boxes we can see the

```{r,,fig.pos="H"}
#| label: fig-boxplot
#| echo: false
#| eval: true
#| fig-cap: "Boxplot of response variable over time, controlling for thickness and inoculation method."


##2. Boxplot

ggplot(data, aes(x = factor(Week), y = Response, fill = Inoculation_Method)) +
  geom_boxplot() +
  facet_wrap(~ Thickness) +
  labs(
    x = "Week",
    y = "Response",
    fill = "Inoculation Method"
  ) +
  theme_minimal() +
  theme(
    text = element_text(size = 14),
    legend.position = "bottom"
  )


```

```{r}
# Load ggplot2 library
library(ggplot2)

# Create a line plot for response trends
ggplot(data, aes(x = Week, y = Response, color = Inoculation_Method, group = interaction(Inoculation_Method, Thickness))) +
  geom_line(aes(linetype = Thickness), size = 1) +
  geom_point() +
  labs(
    title = "Response Trends Across Weeks",
    x = "Week",
    y = "Response",
    color = "Inoculation Method",
    linetype = "Thickness"
  ) +
  theme_minimal() +
  theme(
    text = element_text(size = 14),
    legend.position = "bottom"
  )

```

# Correlation Structure

The correlation matrix and plot shows the relationships between repeated measurements over Weeks 1 to 5. Strong correlations are observed between adjacent weeks (e.g., Week 1 vs. Week 2, r=0.69, Week 2 vs. Week 3, r=0.74), indicating temporal dependency. Correlations weaken as the time gap increases (e.g., Week 1 vs. Week 5, r=0.29), reflecting a decay over time. The pattern suggests a structured temporal relationship, supporting the use of models like AR(1) for systematic decay or UN for maximum flexibility.

```{r}

# Transform the data into wide format with time points as columns
library(tidyr)
wide_data <- pivot_wider(data, names_from = Week, values_from = Response)

# Remove non-numeric columns (like ID or group factors)
time_data <- wide_data[ , -1] # Exclude the first column (ID or grouping variable)
time_data <- time_data[sapply(time_data, is.numeric)]

# Compute the correlation matrix across time points
time_cor_matrix <- cor(time_data, use = "pairwise.complete.obs")

# Print the correlation matrix
print(time_cor_matrix)

# Visualize the correlation matrix
library(corrplot)
corrplot(time_cor_matrix, method = "circle", type = "upper", tl.col = "black", tl.srt = 45)

```

## Model Comparison

Based on AIC, AR(1) (âˆ’12.86) provides the best fit with minimal complexity, followed by ARH(1) (âˆ’12.56) and UN (Unstructured) (âˆ’12.22), which also performs well. For AICC, AR(1) (âˆ’12.55) again leads, reinforcing its suitability for small samples, with ARH(1) and UN close behind. Considering BIC, UN (âˆ’18.47) ranks best but is penalized for its complexity, while AR(1) (âˆ’15.03) and ARH(1) (âˆ’15.09) remain competitive.

Recommendation: AR(1) is the best overall model, balancing fit, simplicity, and suitability for equally spaced time points. UN is a strong alternative for maximum flexibility, while ARH(1) offers a middle-ground option for slightly more flexible variance structures.

```{r, fig.pos="H"}
#| label: fig-model-comparison-table
#| echo: false
#| eval: true
#| fig-cap: "Model comparison table."

# Load necessary libraries
library(knitr)
library(kableExtra)

# Model comparison data
covstruct <- data.frame(
  Model = c("VC", "UN", "CS", "AR(1)", "ARH(1)", "ANTE(1)", "TOEP"),
  AIC = c(-12.25, -12.22, -11.6, -12.86, -12.56, -8.57, -7.34),
  AICC = c(-12.09, -3.58, -11.29, -12.55, -11.01, -5.39, -6.19),
  BIC = c(-13.03, -18.47, -12.77, -14.03, -15.30, -12.48, -9.68)
)

knitr::kable(
  covstruct,
  format = "markdown",
  align = "c"
)

```

## Model

Considering all facts the best fitted model we're choosing is Auto Regressive (AR1) Model.

**Write down the model structure**

SAS OUTPUT:

AR(1) Model:

![Fig-1](ar-1.png)

![Fig-1](ar-2.png)

![Fig-1](ar-3.png)
![Fig-1](ar-4.png)

1.  RCBD

```{r}
library(lme4)
library(lmerTest) 

# Fit the RCBD model
rcbd_model <- lmer(
  Response ~ Inoculation_Method * Thickness * Week + (1 | Batches),
  data = data
)

# Summary of the model
summary(rcbd_model)



#2.  With Repeated Measure


# Fit a mixed-effects model for repeated measures
repeated_model <- lmer(
  Response ~ Inoculation_Method * Thickness * Week + (1 | Batches) + (1 | Batches:Week),
  data = data
)

# Summary of the model
summary(repeated_model)

```

3.  Weeks differs across Batches

```{r}
# Fit a mixed-effects model for repeated measures
repeated_slop_model <- lmer(
  Response ~ Inoculation_Method * Thickness * Week + (1 | Batches) + (1 | Batches:Week),
  data = data
)

# Summary of the model
summary(repeated_slop_model)

```

## Model Diagnozition

```{r}
# Residual diagnostics
plot(rcbd_model)
qqnorm(resid(rcbd_model))
qqline(resid(rcbd_model))

# ANOVA table for fixed effects
anova(rcbd_model)

# Residual diagnostics
plot(repeated_model)
qqnorm(resid(repeated_model))
qqline(resid(repeated_model))

# ANOVA table for fixed effects
anova(repeated_model)

anova(rcbd_model, repeated_model, repeated_slop_model)

```

## Post hoc test

```{r}
library(emmeans)

# Post-hoc pairwise comparisons
emmeans(repeated_model, pairwise ~ Inoculation_Method * Thickness)

```

# EXTRA PLOTS RYAN TOOK OUT - WE CAN PUT BACK IN LATER IF WE WANT

```{r,,fig.pos="H"}
#| label: fig-hist-2
#| echo: false
#| eval: true
#| fig-cap: "Histograms of response variable controlling for thickness."
#| layout-ncol: 2
#| fig-subcap: 
#|  - "1/4 inch thickness"
#|  - "1/8 inch thickness"
#| fig-width: 6
#| fig-height: 4

ggplot(data, aes(x = Response, fill = Thickness)) +
  geom_histogram(binwidth = 0.1, color = "black", alpha = 0.7) +
  facet_wrap(~ Thickness) +
  labs(
    x = "Response",
    y = "Frequency"
  ) +
  theme_minimal() +
  theme(text = element_text(size = 14))

```

```{r,,fig.pos="H"}
#| label: fig-barplot
#| echo: false
#| eval: true
#| fig-cap: "Barplot of response variable controlling for thickness and inoculation method."
## 2. Bar Plot
ggplot(response_summary, aes(x = Thickness, y = Mean_Response, fill = Inoculation_Method)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_wrap(~ Week) +
  labs(
    title = "Mean Response by Thickness and Inoculation Method",
    x = "Thickness",
    y = "Mean Response",
    fill = "Inoculation Method"
  ) +
  theme_minimal() +
  theme(
    text = element_text(size = 14),
    legend.position = "bottom"
  )


```

# Conclusion

# Future Work

\newpage

# References

::: {#refs}
:::

\newpage

# Appendix A - R Code

```{r,  fig.pos="H"}
#| label: appendix A
#| echo: true
#| eval: false

```

\newpage

# Appendix B - SAS Code

### Power Analysis

``` sas
data rptm_means;
input Inoculation_Method $ Thickness $ @@; 
do Week=1 to 5 by 1; 
    input mu @@; 
    output; 
end;
datalines;
Dry 1/4 4.26 4.25 4.47 4.33 4.54
Dry 1/8 4.91 4.95 4.67 4.56 4.97
Wet 1/4 4.21 4.57 4.65 4.49 4.38
Wet 1/8 4.86 4.78 4.62 4.32 4.22
;

data rptm_design;
 set rptm_means;
 do Batches = 1 to 5; /* Creating 3 blocks (batches) */
  output;
 end;
run;

proc print data=rptm_design;
run;

/* Creating Model */

proc glimmix data=rptm_design;
    class Batches Inoculation_Method Thickness Week;
    model mu = Inoculation_Method|Thickness|Week;
    random intercept / subject=Batches;
    random Week / subject=Batches*Inoculation_Method*Thickness type=ar(1) residual;
    parms (.029)(0.017)(.028)/hold=1,2,3;  /* Provide 3 parameters for variance components */
    lsmeans Inoculation_Method*Thickness*Week / slicediff=Week cl;
    /* Define main effect contrasts */
    contrast 'Dry vs Wet' 
        Inoculation_Method 1 -1;
    contrast '1/4 vs 1/8 inches' 
        Thickness 1 -1;

    /* Define interaction contrasts */
   contrast 'Dry vs Wet at 1/4 Inches' 
        Inoculation_Method 1 -1 Inoculation_Method*Thickness 1 0 -1 0; 
    contrast 'Dry vs Wet at 1/8 Inches' 
        Inoculation_Method 1 -1 Inoculation_Method*Thickness 0 1 0 -1; 
    contrast '1/4 vs 1/8 inches for Dry inoculation'
        Thickness 1 -1 Inoculation_Method*Thickness 1 -1 0 0;
    contrast '1/4 vs 1/8 inches for Wet inoculation'
        Thickness 1 -1 Inoculation_Method*Thickness 0 0 1 -1;
               
    ods output contrasts=f_contrast tests3=f_anova;
run;

/*Power*/
data power;
    set f_contrast f_anova;
    ncparm = numdf * fvalue;
    alpha = 0.05;
    fcrit = finv(1-alpha, numdf, dendf, 0);
    power = 1 - probf(fcrit, numdf, dendf, ncparm);
run;

proc print data=power;
run;
```

### Simulation

``` sas
/* Step 1: Define AR(1) Covariance Structure in PROC IML */
proc iml;
    n = 20;                    /* Number of subjects per treatment, updated to 20 */
    mean = {0 0 0 0 0};        /* Mean for each week */
    T = 5;                     /* Number of repeated measures (weeks) */
    rho = 0.2;                 /* AR(1) correlation parameter */
    sigma2 = {0.29 0.29 0.29 0.29 0.29};      /* Variance for each week */
    
    /* Construct AR(1) covariance matrix */
    cov = j(T, T, 0);
    do i = 1 to T;
        do j = 1 to T;
            cov[i, j] = sqrt(sigma2[i] * sigma2[j]) * rho**abs(i - j);
        end;
    end;
    
    /* Print covariance matrix */
    print "Covariance Matrix:", cov;

    /* Generate simulated data using the covariance matrix */
    call randseed(12349);      /* Set random seed */
    x = randnormal(n, mean, cov); /* Simulate AR(1) correlated data */
    cname = {"t1", "t2", "t3", "t4", "t5"};
    
    /* Print the simulated data matrix directly */
    print "Simulated Data Matrix (x):", x;
    /* Print Sample mean */
    samplemean = x[:,];
    print samplemean n;

    /* Create dataset from simulated data */
    create inputdatacb from x[colname=cname];
    append from x;
close inputdatacb;
quit;

/* Step 2: Display the Simulated Data as a SAS Table */
proc print data=inputdatacb label;
    title "Simulated Data with AR(1) Covariance Structure";
run;

/* Step 3: Define Treatment Structure and Random Effects */
data rptm_simulation;
    retain Subject 0;
    keep Inoculation_Method Thickness Week Batches Response;

    array weeks[5] t1-t5;

    /* Define mean values for each combination of factors and week */
    if _n_ = 1 then do;
        array mean_values[4,2,5] _temporary_ (
            /* Dry, 1/4 inch */
            4.26, 4.25, 4.47, 4.33, 4.54,
            /* Dry, 1/8 inch */
            4.91, 4.95, 4.67, 4.56, 4.97,
            /* Wet, 1/4 inch */
            4.21, 4.57, 4.65, 4.49, 4.38,
            /* Wet, 1/8 inch */
            4.86, 4.78, 4.62, 4.32, 4.22
        );
    end;

    /* Simulation parameters */
    sigma_batch = sqrt(0.029); /* Batch variance */
    sigma_resid = sqrt(0.017); /* Residual variance */

    /* Loop through each combination of factors */
    do Batches = 1 to 5; /* Number of batches */
        batch_effect = rand("Normal", 0, sigma_batch); /* Random batch effect */

        do Inoculation_Method = "Dry", "Wet";
            do Thickness = "1/4-inch", "1/8-inch";
                Subject + 1;
                set inputdatacb;

                /* Generate response for each week with AR(1) structure */
                do Week = 1 to 5;
                    Mean_Value = mean_values[
                        (Inoculation_Method="Dry")*1 + (Inoculation_Method="Wet")*2,
                        (Thickness="1/4-inch")*1 + (Thickness="1/8-inch")*2,
                        Week
                    ];
                    Response = Mean_Value + batch_effect + weeks[Week];
                    output;
                end;
            end;
        end;
    end;
run;

/* Step 4: Display the Simulated Data in a Structured Format */
proc print data=rptm_simulation label;
    title "Simulated Data for 2x2 Factorial Design with Repeated Measures";
run;
```

### Analysis

``` sas
```

\newpage

# Appendix C - Additional SAS Output
